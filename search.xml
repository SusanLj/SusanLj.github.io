<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git学习笔记</title>
      <link href="/2020/04/18/git-xue-xi-bi-ji/"/>
      <url>/2020/04/18/git-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="git-学习笔记"><a href="#git-学习笔记" class="headerlink" title="git 学习笔记"></a>git 学习笔记</h1><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>git branch  查看当前仓库的所有分支  git branch dev 在当前仓库创建一个名为dev的分支  git checkout -b dev 在当前仓库创建一个名为dev的分支并切换到dev分支git checkout dev 切换到dev分支git branch -d v1  删除v1分支   【先离开这个分支】合并分支git merge 分支名  git checkout -b dev origin/dev  关联远程分支推送到远程分支git push -u origin mastergit push origin dev拉取分支git pull origin mastergit pull推送和拉取中的-u都是指定默认主机（origin），指定之后可以不带参数。冲突问题？先合并再手动解决再添加删除文件先使用git rm -rf 文件名  删除再提交 一次Git reset –hard HEAD^  回退上一个版本  Git reset –hard 版本号  版本号可以使用git log 文件名查看  git init  初始仓库  git status 查看工作区的状态  如果出现working tree is clean 说明工具区里面的数据和分支的数据是一样的  git add  文件1   文件2   把文件提交到暂存区  git commit -m ‘批注信息’ 把当前分支的暂存的所有数据提交到当前分支  git diff 文件名   查看当前文件和当前分支的文件内容的区别 如果没有区别就不显示任何东西  </code></pre><h2 id="冲突解决和git的分区"><a href="#冲突解决和git的分区" class="headerlink" title="冲突解决和git的分区"></a>冲突解决和git的分区</h2><pre><code>1.git中分为工作区，暂存区，分支区，要先将文件add到暂存区再提交到分支区  2.内容的修改各分支都互不影响  3.分工合作时一个人将文件提交之后，另一个人在对文件进行修改之后必须执行命令来将其他人做的修改合并之后才能提交。执行 git pull origin 分支名，就是拉取远程仓库的文件，之后会进行合并。  4.git commit -m' ' 提交所有在暂存区的内容  5.你要修改github仓库中的内容的话，必须先将这个仓库克隆下来在进行推送，不然的话会被拒绝。6.当不同的两个目录（就是工作中两个人）分别提交代码时远程仓库跟自己的本地仓库不同，多了别人提交的代码，做出修改之后，直接提交会失败。应该先 git pull (-u origin master)，拉取远程仓库中的代码，这时你的本地仓库中的内容已经改变，需要自己手动的去修改自己的代码。</code></pre><h2 id="git在eclipse中的使用"><a href="#git在eclipse中的使用" class="headerlink" title="git在eclipse中的使用"></a>git在eclipse中的使用</h2><pre><code>1.将代码提交到码云或者github时，先在eclipse的window-&gt;preference里面的team里面配置github或者码云的账号，和以什么身份提交。没有密钥生成密钥，有密钥直接跳过。  2.鼠标右键team，先commit然后点击remote，然后push，填写远程仓库地址和github或者码云的账号和密码，之后直接push。  3.github和码云的ssh配置只需要配置一次就OK了。  4.在右键team之后点击pull..来拉取远程仓库的新增的内容，注意添加reference即远程仓库的分支名。</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md语法练习</title>
      <link href="/2020/04/17/md-yu-fa-lian-xi/"/>
      <url>/2020/04/17/md-yu-fa-lian-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="md文件一些基本的编辑"><a href="#md文件一些基本的编辑" class="headerlink" title="md文件一些基本的编辑"></a>md文件一些基本的编辑</h1><h2 id="需要的编辑软件"><a href="#需要的编辑软件" class="headerlink" title="需要的编辑软件"></a>需要的编辑软件</h2><ul><li>Typora<br>建议在国内的网站下载，速度应该快一点  </li><li>Vscode<br>轻量级文件编辑器  </li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://dss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3301627600,2968220964&amp;fm=26&amp;gp=0.jpg" alt=""></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">该主题使用说明链接</a></p><p>1.就放弃我，让我继续坠落</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 博客搭建总结</title>
      <link href="/2020/04/17/hhexo-bo-ke-da-jian-zong-jie/"/>
      <url>/2020/04/17/hhexo-bo-ke-da-jian-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>1.首先到官网下载node.js，安装到自己指定的目录</p><p>2.要有一个github账号，设置公钥私钥，公钥私钥的生成使用git（生成的步骤可查看git中的笔记）</p><p>3.在 github 上创建一个仓库，取名为 username.github.io </p><p>4.创建一个文件夹，在这个文件夹中生成 .git 文件，使用 git init 命令</p><a id="more"></a><p>5.将该文件夹与你所创建的远程仓库关联 git remote add origin url.git </p><p>6.在 git命令窗口使用 npm 安装 hexo，具体命令为 npm install -g hexo </p><p>7.创建一个hexo文件夹，进入这个文件夹 执行 hexo init 命令，初始化，会生成相关文件</p><p>8.执行 hexo g 生成命令</p>     <p>hexo s 预览命令     http://localhost:4000/</p><p>9.下载主题     git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</p><p>10.通过修改  _config.yml 文件来修改主题和相关配置</p><p>11.安装插件 npm install hexo-deployer-git --save     为上传到github的插件</p><p>12.修改 _config.yml 文件，填写提交方式和远程仓库地址</p><p>13.使用    hexo d 上传到github</p><p>14.上传到github上的文件在public文件夹中</p><p>15.通过    hexo new "name"    来生成文章，这条命令是在hexo的主目录下执行，会在    source/_posts    文件夹下生成md 文件，通过修改这个来修改文章内容。会自动在public文件夹下转换为  HTML 文件</p><p>16.    !--more-- 能产生 readmore效果</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
